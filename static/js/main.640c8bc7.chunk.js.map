{"version":3,"sources":["components/NavBar/Navbar.js","components/image-results/ImageResults.js","components/Search/Search.js","App.js","index.js"],"names":["Navbar","title","ImageResults","images","fetchPost","useState","open","setOpen","currentImg","setImage","handleClose","actions","lael","primary","onClick","dataLength","length","next","hasMore","GridList","col","map","img","tags","key","id","subtitle","user","actionIcon","handleOpen","largeImageURL","color","src","alt","modal","onRequestClose","style","width","Search","state","searchText","amount","apiUrl","apiKey","page","onTextChange","e","val","target","value","setState","name","axios","get","then","res","data","hits","catch","err","console","log","onAmountChange","index","getData","a","concat","this","onChange","floatingLabelText","fullWidth","primaryText","props","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.640c8bc7.chunk.js","sourcesContent":["import React from 'react'\r\nimport AppBar from 'material-ui/AppBar';\r\n \r\n\r\nexport const Navbar = () => <AppBar title=\"Image Finder\"/>\r\n           \r\n\r\n      \r\n     \r\n    \r\n\r\n","import React,{Fragment,useState}  from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { GridList, GridTile } from 'material-ui/GridList';\r\nimport IconButton from 'material-ui/IconButton';\r\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\r\nimport Dialog from 'material-ui/Dialog';\r\nimport FlatButton from 'material-ui/FlatButton';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\n\r\n \r\nconst ImageResults = ({ images,fetchPost }) => {\r\n    const [open,setOpen]=useState(false)\r\n    const [currentImg, setImage] = useState('')\r\n     \r\n    const handleOpen = img => {\r\n        setImage(img);\r\n        setOpen(true)\r\n    };\r\n    \r\n    const handleClose = () => {\r\n        setOpen(false)\r\n    };\r\n     \r\n    \r\n    const actions = [\r\n        <FlatButton lael=\"Close\" primary={true} onClick={handleClose}/>\r\n    ]\r\n    return (\r\n        <Fragment>\r\n            <InfiniteScroll\r\n            dataLength={images.length}\r\n            next={fetchPost}\r\n            hasMore={true}\r\n             \r\n            >\r\n            <GridList col={4}>\r\n                {images.map(img => (\r\n                    <GridTile\r\n                        title={img.tags}\r\n                        key={img.id}\r\n                        subtitle={\r\n                            <span>\r\n                                by <strong>\r\n                                    {img.user}\r\n                                </strong>\r\n                            </span> \r\n                        }\r\n                        actionIcon={\r\n                            <IconButton\r\n                                onClick={()=>handleOpen(img.largeImageURL)}\r\n                            >\r\n                            <ZoomIn color=\"white\"/>\r\n                            </IconButton>\r\n                        }\r\n                    >\r\n                        <img src={img.largeImageURL} alt=\"\"/>\r\n                </GridTile>\r\n           ))}\r\n            </GridList>\r\n            <Dialog\r\n                actions={actions}\r\n                modal={false}\r\n                open={open}\r\n                onRequestClose={handleClose}>\r\n                <img src={currentImg} alt=\"\" style={{width:'100%'}}/>\r\n                </Dialog>\r\n                </InfiniteScroll>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nImageResults.propTypes = {\r\n    images:PropTypes.array\r\n}\r\n\r\nexport default ImageResults\r\n\r\n","import React, { Component } from 'react';\r\nimport TextField from 'material-ui/TextField';\r\nimport SelectField from 'material-ui/SelectField';\r\nimport MenuItem from 'material-ui/MenuItem';\r\nimport axios from 'axios';\r\nimport ImageResults from '../image-results/ImageResults';\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    searchText: '',\r\n    amount: 15,\r\n    apiUrl: 'https://pixabay.com/api',\r\n    apiKey: 'GET AN API KEY AT https://pixabay.com/',\r\n      images: [],\r\n    page:1\r\n  };\r\n\r\n  onTextChange = e => {\r\n    const val = e.target.value;\r\n    this.setState({ [e.target.name]: val }, () => {\r\n        if (val === '') {\r\n            this.setState({\r\n                images: []\r\n            })\r\n        } else {\r\n            \r\n \r\n            axios\r\n                .get(\r\n                    `${this.state.apiUrl}/?key=10264528-b2048680351575b4d96ab6126&q=${\r\n                    this.state.searchText\r\n                    }&image_type=photo&per_page=${this.state.amount}&safesearch=true`\r\n                )\r\n                .then(res => this.setState({ images: res.data.hits }))\r\n                .catch(err => console.log(err));\r\n     \r\n        }\r\n    });\r\n  };\r\n\r\n    onAmountChange = (e, index, value) => this.setState({ amount: value });\r\n    \r\n    getData = async () => {\r\n        this.setState({\r\n           page:2\r\n       })\r\n      await axios.get(\r\n         `${this.state.apiUrl}/?key=10264528-b2048680351575b4d96ab6126&q=${\r\n         this.state.searchText\r\n         }&page=${this.state.page}&image_type=photo&per_page=${this.state.amount}&safesearch=true`\r\n     )\r\n     .then(res => this.setState({ images: this.state.images.concat(res.data.hits) }))\r\n            .catch(err => console.log(err));\r\n    console.log(this.state.images)\r\n        \r\n  }\r\n\r\n    render() {\r\n       \r\n     return (\r\n      <div>\r\n        <TextField\r\n          name=\"searchText\"\r\n          value={this.state.searchText}\r\n          onChange={this.onTextChange}\r\n          floatingLabelText=\"Search For Images\"\r\n          fullWidth={true}\r\n        />\r\n        <br />\r\n        <SelectField\r\n          name=\"amount\"\r\n          floatingLabelText=\"Amount\"\r\n          value={this.state.amount}\r\n          onChange={this.onAmountChange}\r\n        >\r\n          <MenuItem value={5} primaryText=\"5\" />\r\n          <MenuItem value={10} primaryText=\"10\" />\r\n          <MenuItem value={15} primaryText=\"15\" />\r\n          <MenuItem value={30} primaryText=\"30\" />\r\n          <MenuItem value={50} primaryText=\"50\" />\r\n        </SelectField>\r\n        <br />\r\n             {this.state.images.length > 0 && <ImageResults getData={this.props.fetchPost} images={this.state.images}/>}\r\n       \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React,{Fragment} from 'react';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\n import './App.css';\nimport { Navbar } from './components/NavBar/Navbar'\nimport Search from './components/Search/Search'\n\nfunction App() {\n  return (\n    <MuiThemeProvider>\n      <Fragment>\n      <Navbar />\n        <Search />\n        </Fragment>\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n import App from './App';\n \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n \n"],"sourceRoot":""}